/*---------------------------------------------*/
/*---------------------------------------------*/
/* 尊重他人劳动成果 , 禁止抄袭 */
/* Don't Copy , please */
/*---------------------------------------------*/
/*---------------------------------------------*/
/* 作者我的百度贴吧用户名 : 我的世界之血狼 */
/* 作者我的QQ : 1366329192 */
/* Make by 我的世界之血狼 in Chinese Baidu Tieba */
/* Maker's Gmail : pengchenxiang@gmail.com */
/*---------------------------------------------*/
/*---------------------------------------------*/
/* 如果你能从我的源码这里改进了一些算法或者灵感或者其他什么的 */
/* 我会很为你高兴的 */
/* 但是请你不要抄袭 */
/* 谢谢 */
/* I will be happy for you if you can get something here */
/* But don't copy my ModPE */
/* That all , thanks */
/*---------------------------------------------*/
/*---------------------------------------------*/

/*Variable*/
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

var 附魔类型_武器 = EnchantType["weapon"];
var 附魔类型_弓箭 = EnchantType["bow"];
var 附魔类型_锄头 = EnchantType["hoe"];
var 附魔类型_剪刀 = EnchantType["shears"];
var 附魔类型_打火石 = EnchantType["flintAndSteel"];
var 附魔类型_斧子 = EnchantType["axe"];
var 附魔类型_镐子 = EnchantType["pickaxe"];
var 附魔类型_铲子 = EnchantType["shovel"];
var 附魔类型_鱼竿 = EnchantType["fishingRod"];
var 附魔类型_书本 = EnchantType["book"];
var 附魔属性_水下速掘 = Enchantment["AQUA_AFFINITY"];
var 附魔属性_节肢杀手 = Enchantment["BANE_OF_ARTHROPODS"];
var 附魔属性_爆炸保护 = Enchantment["BLAST_PROTECTION"];
var 附魔属性_海洋探索者 = Enchantment["DEPTH_STRIDER"];
var 附魔属性_挖掘效率 = Enchantment["EFFICIENCY"];
var 附魔属性_摔落保护 = Enchantment["FEATHER_FALLING"];
var 附魔属性_火焰附加 = Enchantment["FIRE_ASPECT"];
var 附魔属性_火焰保护 = Enchantment["FIRE_PROTECTION"];
var 附魔属性_火矢 = Enchantment["FLAME"];
var 附魔属性_时运 = Enchantment["FORTUNE"];
var 附魔属性_无限 = Enchantment["INFINITY"];
var 附魔属性_击退 = Enchantment["KNOCKBACK"];
var 附魔属性_抢夺 = Enchantment["LOOTING"];
var 附魔属性_海之眷顾 = Enchantment["LUCK_OF_THE_SEA"];
var 附魔属性_钓饵 = Enchantment["LURE"];
var 附魔属性_力量 = Enchantment["POWER"];
var 附魔属性_远程保护 = Enchantment["PROJECTILE_PROTECTION"];
var 附魔属性_保护 = Enchantment["PROTECTION"];
var 附魔属性_弓箭击退 = Enchantment["PUNCH"];
var 附魔属性_水下呼吸 = Enchantment["RESPIRATION"];
var 附魔属性_锋利 = Enchantment["SHARPNESS"];
var 附魔属性_精准采集 = Enchantment["SILK_TOUCH"];
var 附魔属性_灵亡杀手 = Enchantment["SMITE"];
var 附魔属性_荆棘 = Enchantment["THORNS"];
var 附魔属性_耐久 = Enchantment["UNBREAKING"];

ModPEID_Item = [];
ModPEID_Block = [];

BlockIDName = [];
ItemIDName = [];

Tools = [[] , [] , [] , []];

Minecraft_Tool = [[270 , 274 , 257 , 278 , 285] , [271 , 275 , 258 , 279 , 286] , [269 , 273 , 256 , 277 , 284] , [268 , 272 , 267 , 276 , 283]];
for(Tool_ID = 0; Tool_ID <= 5; ++ Tool_ID){
    Minecraft_Tool[Minecraft_Tool[0][Tool_ID]] = Minecraft_Tool[0][Tool_ID];
    Minecraft_Tool[Minecraft_Tool[1][Tool_ID]] = Minecraft_Tool[1][Tool_ID];
    Minecraft_Tool[Minecraft_Tool[2][Tool_ID]] = Minecraft_Tool[2][Tool_ID];
    Minecraft_Tool[Minecraft_Tool[3][Tool_ID]] = Minecraft_Tool[3][Tool_ID];
    Minecraft_Tool[0][Minecraft_Tool[0][Tool_ID]] = Minecraft_Tool[0][Tool_ID];
    Minecraft_Tool[1][Minecraft_Tool[1][Tool_ID]] = Minecraft_Tool[1][Tool_ID];
    Minecraft_Tool[2][Minecraft_Tool[2][Tool_ID]] = Minecraft_Tool[2][Tool_ID];
    Minecraft_Tool[3][Minecraft_Tool[3][Tool_ID]] = Minecraft_Tool[3][Tool_ID];
}

ItemType = {
    Item : "Item" , 
    Tool : "Tool"
};
BlockType = {
    Block : "Block" , 
    Water : "Water" , 
    Lava : "Lava"
};

var 工具ID = null;

var LightLevel = [0 , 7 , 15];

BloodWolf["ForgottenCraftFunction"] = {
    /*setIDName_Item : function(_ForgottenCraft0_ , _ForgottenCraft1_){
        ItemIDName[_ForgottenCraft0_] = _ForgottenCraft1_;
        ItemIDName[_ForgottenCraft1_] = _ForgottenCraft0_;
        return _ForgottenCraft0_;
    } , 
    setIDName_Block : function(_ForgottenCraft0_ , _ForgottenCraft1_){
        BlockIDName[_ForgottenCraft0_] = _ForgottenCraft1_;
        BlockIDName[_ForgottenCraft1_] = _ForgottenCraft0_;
        return _ForgottenCraft0_;
    } , */
    DefaultTool : {
        //BloodWolf.ForgottenCraftFunction.DefaultTool.setItem([ID , NameString名字串字符] , [TextureString材质串字符 , 材质排列值] , [ItemType物品类型 , 物品类型排列值]);
        setItem : function(_ForgottenCraft0_ , _ForgottenCraft1_ , _ForgottenCraft2_ , _ForgottenCraft3_){
            ItemIDName[_ForgottenCraft0_[0]] = _ForgottenCraft0_[1];
            ItemIDName[_ForgottenCraft0_[1]] = _ForgottenCraft0_[0];
            if(_ForgottenCraft2_[0] == "Item"){
                if(_ForgottenCraft2_[1] == 0){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[物品]" + " " + _ForgottenCraft0_[1] , 64);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0] , 2 , 0);
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "addItemCreativeInv")(_ForgottenCraft0_[0] , 64 , 0);
                }
                if(_ForgottenCraft2_[1] == 1){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[物品]" + " " + _ForgottenCraft0_[1] , 16);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0] , 2 , 0);
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "addItemCreativeInv")(_ForgottenCraft0_[0] , 16 , 0);
                }
                if(_ForgottenCraft2_[1] == 2){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[物品]" + " " + _ForgottenCraft0_[1] , 64);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0] , 4 , 0);
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "addItemCreativeInv")(_ForgottenCraft0_[0] , 64 , 0);
                }
                if(_ForgottenCraft2_[1] == 3){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[物品]" + " " + _ForgottenCraft0_[1] , 16);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0] , 4 , 0);
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "addItemCreativeInv")(_ForgottenCraft0_[0] , 16 , 0);
                }
                ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setHandEquipped")(_ForgottenCraft0_[0] , false);
            }
            if(_ForgottenCraft2_[0] == "Tool"){
                if(_ForgottenCraft2_[1] == 0){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[工具][镐]" + " " + _ForgottenCraft0_[1] , 1);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setEnchantType")(_ForgottenCraft0_[0] , 附魔类型_镐子 , 1);
                    Tools[0][_ForgottenCraft0_[0]] = _ForgottenCraft0_[0];
                }
                if(_ForgottenCraft2_[1] == 1){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[工具][斧]" + " " + _ForgottenCraft0_[1] , 1);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setEnchantType")(_ForgottenCraft0_[0] , 附魔类型_斧子 , 1);
                    Tools[1][_ForgottenCraft0_[0]] = _ForgottenCraft0_[0];
                }
                if(_ForgottenCraft2_[1] == 2){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[工具][铲]" + " " + _ForgottenCraft0_[1] , 1);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setEnchantType")(_ForgottenCraft0_[0] , 附魔类型_铲子 , 1);
                    Tools[2][_ForgottenCraft0_[0]] = _ForgottenCraft0_[0];
                }
                if(_ForgottenCraft2_[1] == 3){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , "[工具][剑]" + " " + _ForgottenCraft0_[1] , 1);
                    ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setEnchantType")(_ForgottenCraft0_[0] , 附魔类型_武器 , 1);
                    Tools[3][_ForgottenCraft0_[0]] = _ForgottenCraft0_[0];
                }
                if(_ForgottenCraft2_[1] == 4){
                    ForgottenCraft(BloodWolf["ForgottenCraftModPE"] , "setItem")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0] , _ForgottenCraft1_[1] , _ForgottenCraft0_[1] , 1);
                }
                ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setHandEquipped")(_ForgottenCraft0_[0] , true);
                ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0] , 3 , 0);
                ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "addItemCreativeInv")(_ForgottenCraft0_[0] , 1 , 0);
                ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setMaxDamage")(_ForgottenCraft0_[0] , _ForgottenCraft3_);
            }
            ModPEID_Item[_ForgottenCraft0_[0]] = _ForgottenCraft0_[0];
        } , 
        setToolDestroyBlockTime_0 : function(_ForgottenCraft0_){
            _ForgottenCraft1_ = _ForgottenCraft0_*20;
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(1 , 7.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(4 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(14 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(15 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(16 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(21 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(22 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(23 , 17.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(24 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(41 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(42 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(43 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(44 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(45 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(48 , 7.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(49 , 250 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(52 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(56 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(57 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(61 , 17.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(62 , 17.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(67 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(71 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(73 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(74 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(87 , 2 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(98 , 7.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(101 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(108 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(109 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(112 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(113 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(114 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(116 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(118 , 10 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(121 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(125 , 17.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(129 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(139 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(145 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(152 , 25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(153 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(154 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(155 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(156 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(159 , 6.25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(172 , 6.25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(173 , 15 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(BlockIDName["矿物"] , 15 / _ForgottenCraft1_);
        } , 
        setToolDestroyBlockTime_1 : function(_ForgottenCraft0_){
            _ForgottenCraft1_ = _ForgottenCraft0_;
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(5 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(17 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(18 , 0.35 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(47 , 2.25 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(53 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(54 , 3.75 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(58 , 3.75 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(63 , 1.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(64 , 4.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(65 , 0.65 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(68 , 1.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(85 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(96 , 4.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(103 , 1.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(107 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(134 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(135 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(136 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(157 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(158 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(161 , 0.35 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(162 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(163 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(164 , 3 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(183 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(184 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(185 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(186 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(187 , 4 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(BlockIDName["图纸绘制台"] , 3 / _ForgottenCraft1_);
        } , 
        setToolDestroyBlockTime_2 : function(_ForgottenCraft0_){
            _ForgottenCraft1_ = _ForgottenCraft0_;
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(2 , 0.9 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(3 , 0.75 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(12 , 0.75 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(13 , 0.9 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(78 , 0.5 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(80 , 1 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(82 , 0.9 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(88 , 0.75 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(110 , 0.9 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(198 , 0.9 / _ForgottenCraft1_);
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(243 , 0.9 / _ForgottenCraft1_);
        } , 
        setToolDestroyBlockTime_3 : function(_ForgottenCraft0_){
            _ForgottenCraft1_ = _ForgottenCraft0_*20;
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setDestroyTime")(30 , 20 / _ForgottenCraft1_);
        } , 
        attackHook : function(attacker , victim){
            目前手持ID = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")();
            目前手持Data = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")();
            目前手持物品格 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getSelectedSlotId")();
            附魔项目 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEnchantments")(目前手持物品格);
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[0][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 278 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[1][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 279 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[2][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 277 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[3][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 276 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
        } , 
        continueDestroyBlock : function(x , y , z , side , progress){
            /*目前手持ID = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")();
            目前手持Data = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")();
            目前手持物品格 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getSelectedSlotId")();
            附魔项目 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEnchantments")(目前手持物品格);
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[0][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[0][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(0.25);
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[1][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[1][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(1.0);
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[2][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[2][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(1.0);
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[3][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[3][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(1.0);
            }*/
            if(ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "getName")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")() , true) != null){
                ItemName = ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "getName")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")() , true).split("");
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][镐]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][镐]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(0.25);
                }
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][斧]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][斧]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(1.0);
                }
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][铲]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][铲]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(1.0);
                }
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][剑]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][剑]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(1.0);
                }
            }
        } , 
        destroyBlock : function(x , y , z , side){
            目前手持ID = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")();
            目前手持Data = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")();
            目前手持物品格 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getSelectedSlotId")();
            附魔项目 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEnchantments")(目前手持物品格);
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[0][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 278 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
                if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getTile")(x , y , z) == BlockIDName["矿物"]){
                    if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getData")(x , y , z) == 0){
                        ForgottenCraft(BloodWolf["ForgottenCraftFunction"] , "dropItem")([x , y , z] , [ItemIDName["矿物铜"] , 1 , 0]);
                    }
                    if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getData")(x , y , z) == 1){
                        ForgottenCraft(BloodWolf["ForgottenCraftFunction"] , "dropItem")([x , y , z] , [ItemIDName["矿物铝"] , 1 , 0]);
                    }
                    if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getData")(x , y , z) == 2){
                        ForgottenCraft(BloodWolf["ForgottenCraftFunction"] , "dropItem")([x , y , z] , [ItemIDName["矿物锡"] , 1 , 0]);
                    }
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[1][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 279 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[2][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 277 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[3][目前手持ID]){
                工具ID = [ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")()];
                ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 276 , 1 , 0);
                for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                    ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                }
            }
        } , 
        startDestroyBlock : function(x , y , z , side){
            /*目前手持ID = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")();
            目前手持Data = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")();
            目前手持物品格 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getSelectedSlotId")();
            附魔项目 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEnchantments")(目前手持物品格);
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[0][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[0][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(0.25);
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[1][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[1][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(1.0);
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[2][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[2][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(1.0);
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[3][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(6.0);
            }
            else if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() !== Tools[3][目前手持ID]){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(1.0);
            }*/
            if(ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "getName")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")() , true) != null){
                ItemName = ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "getName")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() , ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")() , true).split("");
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][镐]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][镐]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(0.25);
                }
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][斧]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][斧]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(1.0);
                }
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][铲]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][铲]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(1.0);
                }
                if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] == "item.[工具][剑]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(6.0);
                }
                else if(ItemName[0] + ItemName[1] + ItemName[2] + ItemName[3] + ItemName[4] + ItemName[5] + ItemName[6] + ItemName[7] + ItemName[8] + ItemName[9] + ItemName[10] + ItemName[11] !== "item.[工具][剑]"){
                    ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(1.0);
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == 0){
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_0")(0.25);
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_1")(1.0);
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_2")(1.0);
                ForgottenCraft(BloodWolf["ForgottenCraftFunction"]["DefaultTool"] , "setToolDestroyBlockTime_3")(1.0);
            }
        } , 
        modTick : function(){
            目前手持ID = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")();
            目前手持Data = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")();
            目前手持物品格 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getSelectedSlotId")();
            //附魔项目 = ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEnchantments")(目前手持物品格);
            if(工具ID){
                if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == 278 || ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == 279 || ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == 277 || ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == 276){
                    if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getGameMode")() == 0){
                        ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 工具ID[0] , 1 , 工具ID[1] + 1);
                    }
                    if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getGameMode")() !== 0){
                        ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 工具ID[0] , 1 , 工具ID[1]);
                    }
                    for(附魔 = 0; 附魔 < 附魔项目["length"]; 附魔 ++){
                        ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "enchant")(目前手持物品格 , 附魔项目[附魔].type , 附魔项目[附魔].level);
                    }
                    工具ID = null;
                }
            }
            if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[0][目前手持ID] || ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[1][目前手持ID] || ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[2][目前手持ID] || ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItem")() == Tools[3][目前手持ID]){
                if(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getCarriedItemData")() >= ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "getMaxDamage")(目前手持ID)){
                    ForgottenCraft(BloodWolf["ForgottenCraftEntity"] , "setCarriedItem")(ForgottenCraft(BloodWolf["ForgottenCraftPlayer"] , "getEntity")() , 0);
                    ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "playSound")(BloodWolf["ForgottenCraftPlayer"]["getX"]() , BloodWolf["ForgottenCraftPlayer"]["getY"]() , BloodWolf["ForgottenCraftPlayer"]["getZ"]() , "random.break" , 100 , 0);
                }
            }
        }
    } , 
    //BloodWolf.ForgottenCraftFunction.setBlock([[ID , NameString名字串字符] , BlockType方块类型] , [[TextureString材质串字符 , 材质排列值]] , LightLevel[] , BlockModel方块模型);
    setBlock : function(_ForgottenCraft0_ , _ForgottenCraft1_ , _ForgottenCraft2_ , _ForgottenCraft3_){
        BlockIDName[_ForgottenCraft0_[0][0]] = _ForgottenCraft0_[0][1];
        BlockIDName[_ForgottenCraft0_[0][1]] = _ForgottenCraft0_[0][0];
        if(_ForgottenCraft0_[1] == "Block"){
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "defineBlock")(_ForgottenCraft0_[0][0] , _ForgottenCraft0_[0][1] , _ForgottenCraft1_ , 49 , false , _ForgottenCraft3_);
        }
        if(_ForgottenCraft0_[1] == "Water"){
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "defineLiquidBlock")(_ForgottenCraft0_[0][0] , _ForgottenCraft0_[0][1] , _ForgottenCraft1_ , 8);
            ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0][0] , 2 , 0);
        }
        if(_ForgottenCraft0_[1] == "Lava"){
            ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "defineLiquidBlock")(_ForgottenCraft0_[0][0] , _ForgottenCraft0_[0][1] , _ForgottenCraft1_ , 10);
            ForgottenCraft(BloodWolf["ForgottenCraftItem"] , "setCategory")(_ForgottenCraft0_[0][0] , 2 , 0);
        }
        ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setLightOpacity")(_ForgottenCraft0_[0][0] , 0);
        ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setLightLevel")(_ForgottenCraft0_[0][0] , _ForgottenCraft2_);
        ModPEID_Block[_ForgottenCraft0_[0][0]] = _ForgottenCraft0_[0][0];
    } , 
    AddMine1 : function(生成方块 , 数量 , 高度 , 替换方块){
        生成 = 0;生成 ++;
        几率 = Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]())// + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]());
        x = getPlayerX() + Math["random"]() * 256
        y = Math["random"]() * 高度
        z = getPlayerZ() + Math["random"]() * 256
        if(Level["getTile"](x , y , z) == 替换方块[0] && Level["getData"](x , y , z) == 替换方块[1]){
            if(生成 <= 数量){
                Level["setTile"](x , y , z , 生成方块[0] , 生成方块[1]);
                if(几率 == 0){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y + 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 1){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 2){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 3){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 4){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 5){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 6){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x  + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 7){
                }
                if(几率 == 8){
                }
                if(几率 == 9){
                }
                if(几率 == 10){
                }
            }
            else if(生成 > 数量){生成 = 0}
        }
    } , 
    AddMine2 : function(生成方块 , 数量 , 高度 , 替换方块){
        生成 = 0;生成 ++;
        几率 = Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]())// + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]());
        x = getPlayerX() + Math["random"]() * 256
        y = Math["random"]() * 高度
        z = getPlayerZ() - Math["random"]() * 256
        if(Level["getTile"](x , y , z) == 替换方块[0] && Level["getData"](x , y , z) == 替换方块[1]){
            if(生成 <= 数量){
                Level["setTile"](x , y , z , 生成方块[0] , 生成方块[1]);
                if(几率 == 0){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y + 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 1){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 2){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 3){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 4){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 5){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 6){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x  + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 7){
                }
                if(几率 == 8){
                }
                if(几率 == 9){
                }
                if(几率 == 10){
                }
            }
            else if(生成 > 数量){生成 = 0}
        }
    } , 
    AddMine3 : function(生成方块 , 数量 , 高度 , 替换方块){
        生成 = 0;生成 ++;
        几率 = Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]())// + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]());
        x = getPlayerX() - Math["random"]() * 256
        y = Math["random"]() * 高度
        z = getPlayerZ() + Math["random"]() * 256
        if(Level["getTile"](x , y , z) == 替换方块[0] && Level["getData"](x , y , z) == 替换方块[1]){
            if(生成 <= 数量){
                Level["setTile"](x , y , z , 生成方块[0] , 生成方块[1]);
                if(几率 == 0){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y + 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 1){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 2){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 3){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 4){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 5){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 6){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x  + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 7){
                }
                if(几率 == 8){
                }
                if(几率 == 9){
                }
                if(几率 == 10){
                }
            }
            else if(生成 > 数量){生成 = 0}
        }
    } , 
    AddMine4 : function(生成方块 , 数量 , 高度 , 替换方块){
        生成 = 0;生成 ++;
        几率 = Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]())// + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]()) + Math["round"](Math["random"]());
        x = getPlayerX() - Math["random"]() * 256
        y = Math["random"]() * 高度
        z = getPlayerZ() - Math["random"]() * 256
        if(Level["getTile"](x , y , z) == 替换方块[0] && Level["getData"](x , y , z) == 替换方块[1]){
            if(生成 <= 数量){
                Level["setTile"](x , y , z , 生成方块[0] , 生成方块[1]);
                if(几率 == 0){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y + 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 1){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 2){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 3){
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 4){
                    Level["setTile"](x - 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x - 1 , y - 1 , z - 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 5){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z - 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 6){
                    Level["setTile"](x , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x + 1 , y , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y , z + 1 , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x  + 1 , y - 1 , z , 生成方块[0] , 生成方块[1]);
                    Level["setTile"](x , y - 1 , z + 1 , 生成方块[0] , 生成方块[1]);
                }
                if(几率 == 7){
                }
                if(几率 == 8){
                }
                if(几率 == 9){
                }
                if(几率 == 10){
                }
            }
            else if(生成 > 数量){生成 = 0}
        }
    } , 
    AddMine : function(生成方块 , 数量 , 高度 , 替换方块){
        BloodWolf["ForgottenCraftFunction"]["AddMine1"](生成方块 , 数量 , 高度 , 替换方块);
        BloodWolf["ForgottenCraftFunction"]["AddMine2"](生成方块 , 数量 , 高度 , 替换方块);
        BloodWolf["ForgottenCraftFunction"]["AddMine3"](生成方块 , 数量 , 高度 , 替换方块);
        BloodWolf["ForgottenCraftFunction"]["AddMine4"](生成方块 , 数量 , 高度 , 替换方块);
    } , 
    //BloodWolf.ForgottenCraftFunction.setBlockShape([ID , Data] , [[X开始 , X结束] , [Y开始 , Y结束] , [Z开始 , Z结束]]);
    setBlockShape : function(_ForgottenCraft0_ , _ForgottenCraft1_){
        ForgottenCraft(BloodWolf["ForgottenCraftBlock"] , "setShape")(_ForgottenCraft0_[0] , _ForgottenCraft1_[0][0] / 16 , _ForgottenCraft1_[1][0] / 16 , _ForgottenCraft1_[2][0] / 16 , _ForgottenCraft1_[0][1] / 16 , _ForgottenCraft1_[1][1] / 16 , _ForgottenCraft1_[2][1] / 16 , _ForgottenCraft0_[1]);
    } , 
    //BloodWolf.ForgottenCraftFunction.dropItem([x , y , z] , [ID , Count数量 , Data特殊值]);
    dropItem : function(_ForgottenCraft0_ , _ForgottenCraft1_){
        for(i = 0;i < _ForgottenCraft1_[1];++ i){
            ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "dropItem")(_ForgottenCraft0_[0] + 0.5 , _ForgottenCraft0_[1] + 0.5 , _ForgottenCraft0_[2] + 0.5 , 0 , _ForgottenCraft1_[0] , 1 , _ForgottenCraft1_[2]);
        }
    } , 
    canSeeSky : function(_ForgottenCraft0_ , _ForgottenCraft1_ , _ForgottenCraft2_){
        for(_ForgottenCraft3_ = 1; _ForgottenCraft3_ <= 256; _ForgottenCraft3_ ++){
            if(ForgottenCraft(BloodWolf["ForgottenCraftLevel"] , "getTile")(_ForgottenCraft0_ , _ForgottenCraft1_ + _ForgottenCraft3_ , _ForgottenCraft2_) == 0){
                return true;
            }
            else{
                return false;
            }
        }
    } , 
    saveData : function(_ForgottenCraft0_ , _ForgottenCraft1_){
        try{
            var _ForgottenCraft2_ = new java["io"]["File"](/*android["os"]["Environment"]["getExternalStorageDirectory"]()["getAbsolutePath"]() +*/ _ForgottenCraft0_);
            _ForgottenCraft2_["getParentFile"]()["mkdirs"]();
            _ForgottenCraft2_["createNewFile"]();
            var _ForgottenCraft3_ = new java["io"]["FileWriter"](_ForgottenCraft2_);
            _ForgottenCraft3_["write"](_ForgottenCraft1_);
            _ForgottenCraft3_["close"]();
        }
        catch(e){
            print("写入:" + e);
        }
    } , 
    readData : function(_ForgottenCraft0_ , _ForgottenCraft1_){
        var _ForgottenCraft2_ = new java["io"]["File"](_ForgottenCraft0_);
        if(_ForgottenCraft2_["exists"]()){
            if(_ForgottenCraft2_["isFile"]()){
                var _ForgottenCraft3_ = "";
                var _ForgottenCraft4_ = new java["io"]["InputStreamReader"](new java["io"]["FileInputStream"](_ForgottenCraft2_) , _ForgottenCraft1_);
                var _ForgottenCraft5_ = new java["io"]["BufferedReader"](_ForgottenCraft4_);
                var _ForgottenCraft6_ = null;
                while((_ForgottenCraft6_ = _ForgottenCraft5_["readLine"]()) != null){
                    _ForgottenCraft3_ += _ForgottenCraft6_ /*+ "\n"*/;
                }
                _ForgottenCraft4_["close"]();
                return _ForgottenCraft3_;
            }
        }
    }
}
